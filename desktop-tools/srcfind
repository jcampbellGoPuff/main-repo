#!/bin/zsh

# faceted search
show=0
if [[ "$1" == "-S" || "$1" == "--show-matches" ]]
then
	show=1
	shift
fi

if [ $# -eq 0 ]
then
	echo >&2 "$0: at least one pattern required"
	exit 1
fi

if [[ "${@[$#]}" == -* ]]
then
	echo >&2 "$0: last argument must be a pattern, not a flag"
	exit 1
fi

function extract_flags()
{
	local start=$1
	shift
	local v=("$@")
	local next=$start

	while [[ $next < ${#v[@]} ]]
	do
		if [[ "${v[@]:$next:1}" != -* ]]
		then
			break
		fi
		echo "${v[@]:$next:1}"
		next=$((next + 1))
	done

	return $next
}

function gen_egrep()
{
	local pat="$1"
	local last="$2"
	local show="$3"
	shift 3
	local opts="$@"
	local zero_opt=""
	if (( $last == 0 ))
	then
		zero_opt=--null
	fi
	if (( $show == 1 )) 
	then
		file_opt=-H
	else
		file_opt=--files-with-matches
	fi

	echo \
		xargs -0 egrep \
			--binary-files=without-match \
			$zero_opt \
			$file_opt \
			$opts \
			"'$pat'"
	return 0
}

args=($@)
arg_count=${#args[@]}

pat="${args[@]:$arg_idx:1}"
base_command="find . \
	-type d \( \
		-name node_modules \
		-o -name dist \
		-o -name '.?*' \
	\) \
	-prune \
	-o \
	\( \
		-type f \
		! -name '.*' \
		! -name 'package-lock.json' \
		! -name 'yarn.lock' \
		! -name '*.log' \
	\) \
	-print0"

command="$base_command"

# Now construct command line by iterating per pattern
arg_idx=0
while (( $arg_idx < $arg_count ))
do
		egrep_options=$(extract_flags $arg_idx ${args[@]})
		arg_idx=$?

		pat="${args[@]:$arg_idx:1}"
		
		command="${command} | "$(gen_egrep "$pat" $((arg_idx == arg_count - 1)) $show $egrep_options)
		arg_idx=$((arg_idx + 1))
done

#echo >&2 $command
eval "$command"
exit $?
